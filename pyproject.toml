[tool.poetry]
name = "findmyorder"
version = "1.3.18"
description = "A python package to identify and parse order for trade execution."
authors = ["mraniki <8766259+mraniki@users.noreply.github.com>"]
license = "MIT License"
readme = "README.md"
keywords = ["trading", "order", "trade","buy","sell"]
packages = [
    {include = "findmyorder"}
]

[tool.poetry.urls]
"Changelog" =  "https://github.com/mraniki/findmyorder/blob/dev/CHANGELOG.rst"
"Support" =  "https://github.com/mraniki/findmyorder/discussions"
"Issues" =  "https://github.com/mraniki/findmyorder/issues"

[tool.poetry.dependencies]
python = "^3.10"
asyncio = "*"
dynaconf = "*"
pyparsing = "^3.0.9"
emoji = "*"

[tool.poetry.dev-dependencies]
python-semantic-release = "*"
pytest = "*"
pytest-cov = "*"
pytest-asyncio = "*"
pytest-mock = "*"
coverage = "*"

[tool.pytest.ini_options]
testpaths = "tests"
pythonpath = "."
python_classes = "Test*"
log_format = "%(asctime)s - %(levelname)s - %(name)s - %(message)s"
log_level = "DEBUG"
#addopts = [
  # "--cov /findmyorder --cov-report --verbose",
#  "--ignore=examples",
#  ]
# addopts = [
#     "--capture=no",
#     "--ignore=tests",
#     "--ignore=/examples",
#     "--ignore-glob=examples/*.py"
# ]

[tool.coverage.run]
branch = true
omit = [
    "tests/*",
    "examples/*"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
version_variable = ["pyproject.toml:version","findmyorder/__init__.py:__version__"]
branch = "main"
upload_to_pypi = true
upload_to_release = true
build_command = "pip install poetry && poetry build"
commit_parser = "semantic_release.history.emoji_parser"
use_textual_changelog_sections = true
major_emoji = [
  "💥,:boom:,BREAKING CHANGE"
  ]
minor_emoji = [
  "feat,🥚,🚀,💄,✨,",
  ":rocket:,:sparkles:,:lipstick:,:egg:"
  ]
patch_emoji = [
  "fix,🎨,🐛,🚑,⚡,🔥,🚨,♻️,🔧,⬆️,🩹,👷,📝,🔒,👽,💬,🥅,✅,🐳,🙈,⚗️,🧐,🔇,🔊,",
  ":art:,:bug:,:ambulance:,:zap:,:fire,:rotating_light:,",
  ":recycle:,:wrench:,:arrow_up:,:adhesive_bandage:,",
  ":construction_worker:,:memo:,:lock:,:alien:,:speech_balloon:,",
  ":goal_net::white_check_mark:,:whale:,:see_no_evil:,",
  ":alembic:,:monocle_face:,:mute:,:loud_sound:"
  ]